{"version":3,"file":"static/webpack/static/development/pages/counter.js.a7ddf759e991d128dc21.hot-update.js","sources":["webpack:///./store/AuthStore.ts"],"sourcesContent":["import { observable, action } from 'mobx'\nimport firebase from '../utils/firebase';\n\nexport class AuthStore {\n\n    constructor(){\n        this.checkLoginStatus()\n    }\n\n    /**\n     * ログインユーザー\n     */\n    @observable user: firebase.User | null = null\n\n\n    /**\n     * ログイン状態\n     */\n    @observable loginStatus: 'login' | 'logout' | 'loading' = 'loading'\n\n    /**\n     * googleのアカウントでログインする\n     */\n    @action\n    async login() {\n        this.checkLoginStatus()\n        this.loginStatus = 'loading'\n        const provider = new firebase.auth.GoogleAuthProvider()\n        await firebase.auth().signInWithRedirect(provider)\n    }\n\n    /**\n     * ログアウトする\n     */\n    @action\n    async logout() {\n        this.checkLoginStatus()\n        this.loginStatus = 'loading'\n        await firebase.auth().signOut()\n    }\n\n\n    /**\n     * firebaseのログイン状態に応じてログインユーザーを変更する\n     * \n     * @param user 設定するユーザー\n     */\n    @action\n    private setUser(user: firebase.User | null) {\n        this.user = user\n        if (user) {\n            this.loginStatus = 'login'\n        } else {\n            this.loginStatus = 'logout'\n        }\n    }\n\n\n    /**\n     * ログイン状態の変更を監視するObserverをセット\n     */\n    private checkLoginStatus() {\n        firebase.auth().onAuthStateChanged(user => {\n            this.setUser(user)\n        })\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAEA;;;;;AANA;AAAA;AACA;AAgBA;;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AAxBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AA4BA;;;;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AACA;AAlCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAuCA;;;;;;AAvCA;AAAA;AAAA;AA8CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAvDA;AAAA;AAAA;AA0DA;AACA;AAAA;AACA;AACA;AACA;AA9DA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}